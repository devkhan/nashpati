// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using AVFoundation;
using CoreMedia;

namespace nashpati.skin
{
	public partial class PlayerViewController : BaseViewController
	{
		private PlaylistItem current;
		public static AVPlayer Player;

		public PlaylistItem Current
		{
			get
			{
				return current;
			}
			set
			{
				PreferenceManager.Default.GlobalPreferences.CurrentPlaying = value;
			}
		}


		public PlayerViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			Player = new AVPlayer(
				new AVPlayerItem(
					AVAsset.FromUrl(
						NSUrl.FromFilename(
							Environment.GetEnvironmentVariable(
								"NASHPATI_SAMPLE_VIDEO_FILE") ?? "/temp/sample.mp4"))));

			PlayerView.Player = Player;
			if (!base.prefs.Paused) { PlayerView.Player.Play(); }

			PlayerControlsContainerView.Layer = new CoreAnimation.CALayer();
			PlayerControlsContainerView.Layer.ZPosition = 1;
			PlayerView.AddSubview(PlayerControlsContainerView);

		}

		public async override void PreferencesChanged(Preferences preferences)
		{
			base.PreferencesChanged(preferences);
			if (prefs.Paused)
			{
				PlayerView.Player.Pause();
			}
			else
			{
				PlayerView.Player.Play();
			}
			if (Current != preferences.CurrentPlaying)
			{
				current = prefs.CurrentPlaying;
				if (Current != null && Current.IsBufferable)
				{
					var item = new AVPlayerItem(
							AVAsset.FromUrl(
								NSUrl.FromFilename(Current.VideoFilePath)));
					PlayerView.Player.ReplaceCurrentItemWithPlayerItem(item);
					PlayerView.Player.Seek(CMTime.FromSeconds(Current.At, 1));
					PlayerView.Player.Play();
				}
			}
		}

	}
}
